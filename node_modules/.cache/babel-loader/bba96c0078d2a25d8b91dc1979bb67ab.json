{"ast":null,"code":"import { observable, runInAction, transaction } from \"mobx\";\nimport React from \"react\";\nimport { useAsObservableSourceInternal } from \"./useAsObservableSource\";\nimport { isPlainObject } from \"./utils\";\nexport function useLocalStore(initializer, current) {\n  var source = useAsObservableSourceInternal(current, true);\n  return React.useState(function () {\n    var local = observable(initializer(source));\n\n    if (isPlainObject(local)) {\n      runInAction(function () {\n        Object.keys(local).forEach(function (key) {\n          var value = local[key];\n\n          if (typeof value === \"function\") {\n            // @ts-ignore No idea why ts2536 is popping out here\n            local[key] = wrapInTransaction(value, local);\n          }\n        });\n      });\n    }\n\n    return local;\n  })[0];\n} // tslint:disable-next-line: ban-types\n\nfunction wrapInTransaction(fn, context) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return transaction(function () {\n      return fn.apply(context, args);\n    });\n  };\n}","map":{"version":3,"sources":["/Users/awang/Downloads/react/key/keyCode/node_modules/mobx-react-lite/es/useLocalStore.js"],"names":["observable","runInAction","transaction","React","useAsObservableSourceInternal","isPlainObject","useLocalStore","initializer","current","source","useState","local","Object","keys","forEach","key","value","wrapInTransaction","fn","context","args","_i","arguments","length","apply"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,EAAkCC,WAAlC,QAAqD,MAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,6BAAT,QAA8C,yBAA9C;AACA,SAASC,aAAT,QAA8B,SAA9B;AACA,OAAO,SAASC,aAAT,CAAuBC,WAAvB,EAAoCC,OAApC,EAA6C;AAChD,MAAIC,MAAM,GAAGL,6BAA6B,CAACI,OAAD,EAAU,IAAV,CAA1C;AACA,SAAOL,KAAK,CAACO,QAAN,CAAe,YAAY;AAC9B,QAAIC,KAAK,GAAGX,UAAU,CAACO,WAAW,CAACE,MAAD,CAAZ,CAAtB;;AACA,QAAIJ,aAAa,CAACM,KAAD,CAAjB,EAA0B;AACtBV,MAAAA,WAAW,CAAC,YAAY;AACpBW,QAAAA,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,OAAnB,CAA2B,UAAUC,GAAV,EAAe;AACtC,cAAIC,KAAK,GAAGL,KAAK,CAACI,GAAD,CAAjB;;AACA,cAAI,OAAOC,KAAP,KAAiB,UAArB,EAAiC;AAC7B;AACAL,YAAAA,KAAK,CAACI,GAAD,CAAL,GAAaE,iBAAiB,CAACD,KAAD,EAAQL,KAAR,CAA9B;AACH;AACJ,SAND;AAOH,OARU,CAAX;AASH;;AACD,WAAOA,KAAP;AACH,GAdM,EAcJ,CAdI,CAAP;AAeH,C,CACD;;AACA,SAASM,iBAAT,CAA2BC,EAA3B,EAA+BC,OAA/B,EAAwC;AACpC,SAAO,YAAY;AACf,QAAIC,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CD,MAAAA,IAAI,CAACC,EAAD,CAAJ,GAAWC,SAAS,CAACD,EAAD,CAApB;AACH;;AACD,WAAOnB,WAAW,CAAC,YAAY;AAAE,aAAOgB,EAAE,CAACM,KAAH,CAASL,OAAT,EAAkBC,IAAlB,CAAP;AAAiC,KAAhD,CAAlB;AACH,GAND;AAOH","sourcesContent":["import { observable, runInAction, transaction } from \"mobx\";\nimport React from \"react\";\nimport { useAsObservableSourceInternal } from \"./useAsObservableSource\";\nimport { isPlainObject } from \"./utils\";\nexport function useLocalStore(initializer, current) {\n    var source = useAsObservableSourceInternal(current, true);\n    return React.useState(function () {\n        var local = observable(initializer(source));\n        if (isPlainObject(local)) {\n            runInAction(function () {\n                Object.keys(local).forEach(function (key) {\n                    var value = local[key];\n                    if (typeof value === \"function\") {\n                        // @ts-ignore No idea why ts2536 is popping out here\n                        local[key] = wrapInTransaction(value, local);\n                    }\n                });\n            });\n        }\n        return local;\n    })[0];\n}\n// tslint:disable-next-line: ban-types\nfunction wrapInTransaction(fn, context) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return transaction(function () { return fn.apply(context, args); });\n    };\n}\n"]},"metadata":{},"sourceType":"module"}