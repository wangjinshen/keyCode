{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { forwardRef, memo } from \"react\";\nimport { isUsingStaticRendering } from \"./staticRendering\";\nimport { useObserver } from \"./useObserver\"; // n.b. base case is not used for actual typings or exported in the typing files\n\nexport function observer(baseComponent, options) {\n  // The working of observer is explained step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307\n  if (isUsingStaticRendering()) {\n    return baseComponent;\n  }\n\n  var realOptions = __assign({\n    forwardRef: false\n  }, options);\n\n  var baseComponentName = baseComponent.displayName || baseComponent.name;\n\n  var wrappedComponent = function (props, ref) {\n    return useObserver(function () {\n      return baseComponent(props, ref);\n    }, baseComponentName);\n  };\n\n  wrappedComponent.displayName = baseComponentName; // memo; we are not interested in deep updates\n  // in props; we assume that if deep objects are changed,\n  // this is in observables, which would have been tracked anyway\n\n  var memoComponent;\n\n  if (realOptions.forwardRef) {\n    // we have to use forwardRef here because:\n    // 1. it cannot go before memo, only after it\n    // 2. forwardRef converts the function into an actual component, so we can't let the baseComponent do it\n    //    since it wouldn't be a callable function anymore\n    memoComponent = memo(forwardRef(wrappedComponent));\n  } else {\n    memoComponent = memo(wrappedComponent);\n  }\n\n  copyStaticProperties(baseComponent, memoComponent);\n  memoComponent.displayName = baseComponentName;\n  return memoComponent;\n} // based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\n\nvar hoistBlackList = {\n  $$typeof: true,\n  render: true,\n  compare: true,\n  type: true\n};\n\nfunction copyStaticProperties(base, target) {\n  Object.keys(base).forEach(function (key) {\n    if (!hoistBlackList[key]) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key));\n    }\n  });\n}","map":{"version":3,"sources":["/Users/awang/Downloads/react/key/keyCode/node_modules/mobx-react-lite/es/observer.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","forwardRef","memo","isUsingStaticRendering","useObserver","observer","baseComponent","options","realOptions","baseComponentName","displayName","name","wrappedComponent","props","ref","memoComponent","copyStaticProperties","hoistBlackList","$$typeof","render","compare","type","base","target","keys","forEach","key","defineProperty","getOwnPropertyDescriptor"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,SAASO,UAAT,EAAqBC,IAArB,QAAiC,OAAjC;AACA,SAASC,sBAAT,QAAuC,mBAAvC;AACA,SAASC,WAAT,QAA4B,eAA5B,C,CACA;;AACA,OAAO,SAASC,QAAT,CAAkBC,aAAlB,EAAiCC,OAAjC,EAA0C;AAC7C;AACA,MAAIJ,sBAAsB,EAA1B,EAA8B;AAC1B,WAAOG,aAAP;AACH;;AACD,MAAIE,WAAW,GAAGrB,QAAQ,CAAC;AAAEc,IAAAA,UAAU,EAAE;AAAd,GAAD,EAAwBM,OAAxB,CAA1B;;AACA,MAAIE,iBAAiB,GAAGH,aAAa,CAACI,WAAd,IAA6BJ,aAAa,CAACK,IAAnE;;AACA,MAAIC,gBAAgB,GAAG,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AACzC,WAAOV,WAAW,CAAC,YAAY;AAAE,aAAOE,aAAa,CAACO,KAAD,EAAQC,GAAR,CAApB;AAAmC,KAAlD,EAAoDL,iBAApD,CAAlB;AACH,GAFD;;AAGAG,EAAAA,gBAAgB,CAACF,WAAjB,GAA+BD,iBAA/B,CAV6C,CAW7C;AACA;AACA;;AACA,MAAIM,aAAJ;;AACA,MAAIP,WAAW,CAACP,UAAhB,EAA4B;AACxB;AACA;AACA;AACA;AACAc,IAAAA,aAAa,GAAGb,IAAI,CAACD,UAAU,CAACW,gBAAD,CAAX,CAApB;AACH,GAND,MAOK;AACDG,IAAAA,aAAa,GAAGb,IAAI,CAACU,gBAAD,CAApB;AACH;;AACDI,EAAAA,oBAAoB,CAACV,aAAD,EAAgBS,aAAhB,CAApB;AACAA,EAAAA,aAAa,CAACL,WAAd,GAA4BD,iBAA5B;AACA,SAAOM,aAAP;AACH,C,CACD;;AACA,IAAIE,cAAc,GAAG;AACjBC,EAAAA,QAAQ,EAAE,IADO;AAEjBC,EAAAA,MAAM,EAAE,IAFS;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,IAAI,EAAE;AAJW,CAArB;;AAMA,SAASL,oBAAT,CAA8BM,IAA9B,EAAoCC,MAApC,EAA4C;AACxCnC,EAAAA,MAAM,CAACoC,IAAP,CAAYF,IAAZ,EAAkBG,OAAlB,CAA0B,UAAUC,GAAV,EAAe;AACrC,QAAI,CAACT,cAAc,CAACS,GAAD,CAAnB,EAA0B;AACtBtC,MAAAA,MAAM,CAACuC,cAAP,CAAsBJ,MAAtB,EAA8BG,GAA9B,EAAmCtC,MAAM,CAACwC,wBAAP,CAAgCN,IAAhC,EAAsCI,GAAtC,CAAnC;AACH;AACJ,GAJD;AAKH","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { forwardRef, memo } from \"react\";\nimport { isUsingStaticRendering } from \"./staticRendering\";\nimport { useObserver } from \"./useObserver\";\n// n.b. base case is not used for actual typings or exported in the typing files\nexport function observer(baseComponent, options) {\n    // The working of observer is explained step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307\n    if (isUsingStaticRendering()) {\n        return baseComponent;\n    }\n    var realOptions = __assign({ forwardRef: false }, options);\n    var baseComponentName = baseComponent.displayName || baseComponent.name;\n    var wrappedComponent = function (props, ref) {\n        return useObserver(function () { return baseComponent(props, ref); }, baseComponentName);\n    };\n    wrappedComponent.displayName = baseComponentName;\n    // memo; we are not interested in deep updates\n    // in props; we assume that if deep objects are changed,\n    // this is in observables, which would have been tracked anyway\n    var memoComponent;\n    if (realOptions.forwardRef) {\n        // we have to use forwardRef here because:\n        // 1. it cannot go before memo, only after it\n        // 2. forwardRef converts the function into an actual component, so we can't let the baseComponent do it\n        //    since it wouldn't be a callable function anymore\n        memoComponent = memo(forwardRef(wrappedComponent));\n    }\n    else {\n        memoComponent = memo(wrappedComponent);\n    }\n    copyStaticProperties(baseComponent, memoComponent);\n    memoComponent.displayName = baseComponentName;\n    return memoComponent;\n}\n// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\nvar hoistBlackList = {\n    $$typeof: true,\n    render: true,\n    compare: true,\n    type: true\n};\nfunction copyStaticProperties(base, target) {\n    Object.keys(base).forEach(function (key) {\n        if (!hoistBlackList[key]) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key));\n        }\n    });\n}\n"]},"metadata":{},"sourceType":"module"}